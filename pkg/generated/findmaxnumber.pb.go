// Code generated by protoc-gen-go. DO NOT EDIT.
// source: findmaxnumber.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	findmaxnumber.proto

It has these top-level messages:
	Number
*/
package generated

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Number struct {
	Number int64 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
}

func (m *Number) Reset()                    { *m = Number{} }
func (m *Number) String() string            { return proto.CompactTextString(m) }
func (*Number) ProtoMessage()               {}
func (*Number) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Number) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func init() {
	proto.RegisterType((*Number)(nil), "protos.Number")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FindMaxNumber service

type FindMaxNumberClient interface {
	GetMaxNumber(ctx context.Context, opts ...grpc.CallOption) (FindMaxNumber_GetMaxNumberClient, error)
}

type findMaxNumberClient struct {
	cc *grpc.ClientConn
}

func NewFindMaxNumberClient(cc *grpc.ClientConn) FindMaxNumberClient {
	return &findMaxNumberClient{cc}
}

func (c *findMaxNumberClient) GetMaxNumber(ctx context.Context, opts ...grpc.CallOption) (FindMaxNumber_GetMaxNumberClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_FindMaxNumber_serviceDesc.Streams[0], c.cc, "/protos.FindMaxNumber/GetMaxNumber", opts...)
	if err != nil {
		return nil, err
	}
	x := &findMaxNumberGetMaxNumberClient{stream}
	return x, nil
}

type FindMaxNumber_GetMaxNumberClient interface {
	Send(*Number) error
	Recv() (*Number, error)
	grpc.ClientStream
}

type findMaxNumberGetMaxNumberClient struct {
	grpc.ClientStream
}

func (x *findMaxNumberGetMaxNumberClient) Send(m *Number) error {
	return x.ClientStream.SendMsg(m)
}

func (x *findMaxNumberGetMaxNumberClient) Recv() (*Number, error) {
	m := new(Number)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for FindMaxNumber service

type FindMaxNumberServer interface {
	GetMaxNumber(FindMaxNumber_GetMaxNumberServer) error
}

func RegisterFindMaxNumberServer(s *grpc.Server, srv FindMaxNumberServer) {
	s.RegisterService(&_FindMaxNumber_serviceDesc, srv)
}

func _FindMaxNumber_GetMaxNumber_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FindMaxNumberServer).GetMaxNumber(&findMaxNumberGetMaxNumberServer{stream})
}

type FindMaxNumber_GetMaxNumberServer interface {
	Send(*Number) error
	Recv() (*Number, error)
	grpc.ServerStream
}

type findMaxNumberGetMaxNumberServer struct {
	grpc.ServerStream
}

func (x *findMaxNumberGetMaxNumberServer) Send(m *Number) error {
	return x.ServerStream.SendMsg(m)
}

func (x *findMaxNumberGetMaxNumberServer) Recv() (*Number, error) {
	m := new(Number)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FindMaxNumber_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.FindMaxNumber",
	HandlerType: (*FindMaxNumberServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetMaxNumber",
			Handler:       _FindMaxNumber_GetMaxNumber_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "findmaxnumber.proto",
}

func init() { proto.RegisterFile("findmaxnumber.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 112 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0xcb, 0xcc, 0x4b,
	0xc9, 0x4d, 0xac, 0xc8, 0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x03, 0x53, 0xc5, 0x4a, 0x0a, 0x5c, 0x6c, 0x7e, 0x60, 0x71, 0x21, 0x31, 0x2e, 0x36, 0x88,
	0x0a, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x28, 0xcf, 0xc8, 0x95, 0x8b, 0xd7, 0x2d, 0x33,
	0x2f, 0xc5, 0x37, 0xb1, 0x02, 0xaa, 0xd0, 0x84, 0x8b, 0xc7, 0x3d, 0xb5, 0x04, 0xc1, 0xe7, 0x83,
	0x18, 0x59, 0xac, 0x07, 0xe1, 0x4b, 0xa1, 0xf1, 0x95, 0x18, 0x34, 0x18, 0x0d, 0x18, 0x93, 0x20,
	0x16, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x2e, 0x8e, 0x10, 0x8e, 0x00, 0x00, 0x00,
}
